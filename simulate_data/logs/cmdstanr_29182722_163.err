Lmod Warning:
-------------------------------------------------------------------------------
The following dependent module(s) are not currently loaded: proj/9.2.0
(required by: libgeotiff/1.7.1, libspatialite/5.1.0, gdal/3.9.1)
-------------------------------------------------------------------------------



This is cmdstanr version 0.9.0.9000
- CmdStanR documentation and vignettes: mc-stan.org/cmdstanr
- Use set_cmdstan_path() to set the path to CmdStan
- Use install_cmdstan() to install CmdStan
Loading required package: lattice

Attaching package: ‘dplyr’

The following objects are masked from ‘package:raster’:

    intersect, select, union

The following object is masked from ‘package:matrixStats’:

    count

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘tidyr’

The following object is masked from ‘package:raster’:

    extract

The following object is masked from ‘package:reshape2’:

    smiths


Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

This is posterior version 1.6.1

Attaching package: ‘posterior’

The following objects are masked from ‘package:raster’:

    %in%, match

The following objects are masked from ‘package:stats’:

    mad, sd, var

The following objects are masked from ‘package:base’:

    %in%, match

CmdStan path set to: /home/melanson/projects/def-ckremen/melanson/cmdstan
Error in `process_initialize(self, private, command, args, stdin, stdout, …`:
! Native call to `processx_exec` failed
Caused by error in `chain_call(c_processx_exec, command, c(command, args), pty, pty_options, …`:
! cannot start processx process './reduce_sum_exponential' (system error 13, Permission denied) @unix/processx.c:611 (processx_exec)
---
Backtrace:
 1. mod$sample(data = data, chains = 4, parallel_chains = 4, threads_per_chain…
 2. runset$run_cmdstan()
 3. private[[run_method]]()
 4. procs$new_proc(id = chain_id, command = self$command(), args = self$comman…
 5. withr::with_path(c(toolchain_PATH_env_var(), tbb_path()), private$processe…
 6. base::force(code)
 7. cmdstanr:::wsl_compatible_process_new(command = command, args = args, wd = wd, …
 8. base::do.call(processx::process$new, run_args)
 9. (function (...) …
10. local initialize(...)
11. processx:::process_initialize(self, private, command, args, stdin, stdout, …
12. processx:::chain_call(c_processx_exec, command, c(command, args), pty, pty_options, …
13. | base::withCallingHandlers(do.call(".Call", list(.NAME, ...)), error = function(e…
14. | base::do.call(".Call", list(.NAME, ...))
15. | base::.handleSimpleError(function (e) …
16. | local h(simpleError(msg, call))
17. | processx:::throw_error(err, parent = e)
Execution halted
